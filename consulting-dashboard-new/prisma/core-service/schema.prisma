// コアサービスのスキーマ - 認証と組織管理

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 組織
model Organization {
  id        String    @id @default(cuid())
  name      String
  type      String    // consultingFirm, client
  users     User[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// ユーザー
model User {
  id                  String               @id @default(cuid())
  email               String               @unique
  password            String
  name                String
  roleId              String
  role                Role                 @relation(fields: [roleId], references: [id])
  organizationId      String
  organization        Organization         @relation(fields: [organizationId], references: [id])
  isActive            Boolean              @default(true)
  lastLogin           DateTime?
  sessions            Session[]
  auditLogs           AuditLog[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt

  @@index([email])
  @@index([organizationId])
  @@index([roleId])
}

// ロール
model Role {
  id          String           @id @default(cuid())
  name        String           @unique
  description String?
  permissions RolePermission[]
  users       User[]
  isSystem    Boolean          @default(false)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

// 権限
model Permission {
  id          String           @id @default(cuid())
  resource    String
  action      String
  description String?
  roles       RolePermission[]
}

// ロールと権限の中間テーブル
model RolePermission {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
}

// セッション
model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  ipAddress String?
  userAgent String?
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([expiresAt])
}

// 監査ログ
model AuditLog {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  action     String
  resource   String
  resourceId String?
  details    String? // JSON as string
  ipAddress  String?
  createdAt  DateTime @default(now())

  @@index([userId])
  @@index([createdAt])
  @@index([resource])
}