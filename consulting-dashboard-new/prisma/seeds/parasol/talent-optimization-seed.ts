import { PrismaClient as ParasolPrismaClient } from '@prisma/parasol-client'

const parasolDb = new ParasolPrismaClient()

// タレント最適化サービスのケーパビリティとビジネスオペレーション定義
export const talentOptimizationData = {
  capabilities: [
    {
      name: 'resource-allocation',
      displayName: 'リソースを最適配置する能力',
      description: 'プロジェクトのニーズとコンサルタントのスキル・稼働状況を考慮し、最適な人材配置を実現する能力',
      category: 'Core',
      definition: `# ビジネスケーパビリティ: リソースを最適配置する能力

## ケーパビリティ概要
組織全体のリソースを俯瞰し、プロジェクトの要求とコンサルタントの能力・志向をマッチングさせる能力

## ビジネス価値
- **生産性向上**: スキルマッチによる効率化
- **満足度向上**: 適材適所による働きがい
- **収益最大化**: 稼働率の最適化

## 実現する成果
- 稼働率: 85%以上
- スキルマッチ率: 90%以上
- アサイン満足度: 4.0以上（5点満点）
- 機会損失削減: 50%減

## 必要な要素
### 人材・スキル
- リソースマネージャー
- スキルアセッサー
- キャパシティプランナー

### プロセス・方法論
- スキルマッチング手法
- 稼働率最適化アルゴリズム
- 需要予測モデル

### ツール・システム
- リソース管理システム
- スキルデータベース
- 稼働率可視化ダッシュボード`,
      businessOperations: [
        {
          name: 'demand-forecasting',
          displayName: 'リソース需要を予測する',
          pattern: 'Analytics',
          goal: '将来のリソース需要の的確な予測',
          design: `# ビジネスオペレーション: リソース需要を予測する

## 目的
パイプライン案件と既存プロジェクトの情報から、将来のリソース需要を予測し、事前準備を可能にする

## 関係者とロール
- **営業部門**: パイプライン情報提供
- **PMO**: 既存プロジェクト情報
- **リソースマネージャー**: 需要分析・予測
- **経営企画**: 採用計画への反映

## ビジネスプロセス
1. **情報収集**: 案件情報、プロジェクト計画
2. **需要分析**: スキル別・期間別の要員数
3. **供給分析**: 現有リソースの可用性
4. **ギャップ分析**: 需給バランスの評価
5. **シナリオ作成**: 複数の需要シナリオ
6. **対策立案**: 採用、育成、外部調達

## KPI
- 予測精度: 80%以上
- 予測期間: 6ヶ月先まで
- ギャップ解消率: 90%`,
          roles: ['営業部門', 'PMO', 'リソースマネージャー', '経営企画'],
          operations: {
            steps: [
              '情報収集',
              '需要分析',
              '供給分析',
              'ギャップ分析',
              'シナリオ作成',
              '対策立案'
            ]
          },
          businessStates: {
            initial: '収集中',
            states: ['収集中', '分析中', '予測作成中', '承認済み'],
            final: '承認済み'
          }
        },
        {
          name: 'skill-matching',
          displayName: 'スキルをマッチングする',
          pattern: 'Analytics',
          goal: 'プロジェクトとコンサルタントの最適マッチ',
          design: `# ビジネスオペレーション: スキルをマッチングする

## 目的
プロジェクトが求めるスキル要件と、コンサルタントの保有スキル・経験を照合し、最適な人材を選定する

## 関係者とロール
- **プロジェクトマネージャー**: 要求スキル定義
- **リソースマネージャー**: マッチング実施
- **コンサルタント**: スキル情報提供
- **キャリアアドバイザー**: キャリア観点の助言

## ビジネスプロセス
1. **要求定義**: 必要スキル・レベルの明確化
2. **候補者検索**: スキルDBからの抽出
3. **適合度評価**: 技術面・業務面の評価
4. **稼働確認**: スケジュール調整
5. **意向確認**: 本人の希望確認
6. **決定・通知**: アサインの確定

## KPI
- マッチング精度: 90%以上
- 検索時間: 30分以内
- 辞退率: 5%以下`,
          roles: ['プロジェクトマネージャー', 'リソースマネージャー', 'コンサルタント', 'キャリアアドバイザー'],
          operations: {
            steps: [
              '要求定義',
              '候補者検索',
              '適合度評価',
              '稼働確認',
              '意向確認',
              '決定・通知'
            ]
          },
          businessStates: {
            initial: '要求受付',
            states: ['要求受付', '検索中', '評価中', '調整中', 'アサイン確定'],
            final: 'アサイン確定'
          }
        },
        {
          name: 'utilization-optimization',
          displayName: '稼働率を最適化する',
          pattern: 'Analytics',
          goal: '組織全体の稼働率最適化',
          design: `# ビジネスオペレーション: 稼働率を最適化する

## 目的
コンサルタントの稼働率を適正水準に維持し、生産性と収益性を最大化する

## 関係者とロール
- **リソースマネージャー**: 稼働率管理
- **プロジェクトマネージャー**: 要員調整
- **財務部門**: 収益性分析
- **人事部門**: ワークライフバランス

## ビジネスプロセス
1. **稼働率モニタリング**: リアルタイム監視
2. **ボトルネック分析**: 低稼働・過稼働の特定
3. **調整案作成**: リソース再配置案
4. **影響評価**: プロジェクトへの影響
5. **実行承認**: 関係者合意
6. **効果測定**: 改善効果の確認

## KPI
- 平均稼働率: 85%
- 過稼働率: 5%以下
- 低稼働率: 10%以下
- 調整成功率: 80%`,
          roles: ['リソースマネージャー', 'プロジェクトマネージャー', '財務部門', '人事部門'],
          operations: {
            steps: [
              '稼働率モニタリング',
              'ボトルネック分析',
              '調整案作成',
              '影響評価',
              '実行承認',
              '効果測定'
            ]
          },
          businessStates: {
            initial: 'モニタリング中',
            states: ['モニタリング中', '分析中', '調整中', '実行中', '完了'],
            final: '完了'
          }
        }
      ]
    },
    {
      name: 'skill-development',
      displayName: 'スキルを開発する能力',
      description: 'コンサルタントの現在のスキルと将来のニーズを踏まえ、計画的にスキル開発を推進する能力',
      category: 'Core',
      definition: `# ビジネスケーパビリティ: スキルを開発する能力

## ケーパビリティ概要
個人のキャリア目標と組織のニーズを調和させながら、継続的なスキル向上を実現する能力

## ビジネス価値
- **競争力向上**: 高度スキル人材の確保
- **定着率向上**: キャリア開発機会の提供
- **イノベーション**: 新規スキルによる価値創造

## 実現する成果
- スキル向上率: 年20%以上
- 資格取得率: 目標の90%達成
- 研修満足度: 4.5以上（5点満点）
- 内部昇進率: 80%以上

## 必要な要素
### 人材・スキル
- ラーニング＆デベロップメント専門家
- スキルアセッサー
- 社内講師・メンター

### プロセス・方法論
- スキルアセスメント手法
- 個別育成計画（IDP）
- 70-20-10モデル

### ツール・システム
- 学習管理システム（LMS）
- スキル評価ツール
- オンライン学習プラットフォーム`,
      businessOperations: [
        {
          name: 'skill-assessment',
          displayName: 'スキルを評価する',
          pattern: 'Analytics',
          goal: '客観的で公平なスキル評価',
          design: `# ビジネスオペレーション: スキルを評価する

## 目的
コンサルタントの保有スキルを客観的に評価し、強み・改善点を明確化する

## 関係者とロール
- **評価対象者**: 自己評価実施
- **上司**: 上司評価、フィードバック
- **スキルアセッサー**: 第三者評価
- **人事部門**: 評価プロセス管理

## ビジネスプロセス
1. **評価基準設定**: スキル定義、レベル基準
2. **自己評価**: 本人によるスキル評価
3. **上司評価**: 実務観点での評価
4. **360度評価**: 同僚・顧客からの評価
5. **総合判定**: 複数視点の統合
6. **フィードバック**: 結果共有と対話

## KPI
- 評価実施率: 100%（年2回）
- 評価納得度: 85%以上
- スキルデータ更新率: 95%`,
          roles: ['評価対象者', '上司', 'スキルアセッサー', '人事部門'],
          operations: {
            steps: [
              '評価基準設定',
              '自己評価',
              '上司評価',
              '360度評価',
              '総合判定',
              'フィードバック'
            ]
          },
          businessStates: {
            initial: '準備中',
            states: ['準備中', '評価中', '判定中', 'フィードバック中', '完了'],
            final: '完了'
          }
        },
        {
          name: 'training-planning',
          displayName: '育成計画を策定する',
          pattern: 'Workflow',
          goal: '個別最適化された育成計画',
          design: `# ビジネスオペレーション: 育成計画を策定する

## 目的
個人のキャリア目標と組織ニーズを踏まえた、実効性の高い育成計画を作成する

## 関係者とロール
- **本人**: キャリア目標の明確化
- **上司**: 育成方針の検討
- **キャリアアドバイザー**: キャリアパス提示
- **L&D部門**: 研修プログラム提案

## ビジネスプロセス
1. **目標設定**: キャリア目標の明確化
2. **ギャップ分析**: 現状と目標の差分
3. **学習方法選定**: 研修、OJT、自己学習
4. **計画作成**: 時期、方法、目標設定
5. **予算承認**: 研修費用の確保
6. **計画確定**: 本人・上司の合意

## KPI
- 計画策定率: 100%
- 計画実行率: 85%以上
- 目標達成率: 80%以上`,
          roles: ['本人', '上司', 'キャリアアドバイザー', 'L&D部門'],
          operations: {
            steps: [
              '目標設定',
              'ギャップ分析',
              '学習方法選定',
              '計画作成',
              '予算承認',
              '計画確定'
            ]
          },
          businessStates: {
            initial: '目標設定中',
            states: ['目標設定中', '分析中', '計画作成中', '承認待ち', '確定'],
            final: '確定'
          }
        },
        {
          name: 'training-execution',
          displayName: '研修を実施する',
          pattern: 'Workflow',
          goal: '効果的な学習機会の提供',
          design: `# ビジネスオペレーション: 研修を実施する

## 目的
計画に基づいた研修を効果的に実施し、スキル向上を確実に実現する

## 関係者とロール
- **受講者**: 研修参加、学習
- **講師**: 知識・スキルの伝授
- **L&D部門**: 研修運営
- **上司**: 学習支援、実践機会提供

## ビジネスプロセス
1. **研修準備**: 教材準備、環境整備
2. **事前学習**: 予習課題の実施
3. **研修実施**: 講義、演習、ディスカッション
4. **理解度確認**: テスト、レポート
5. **実践計画**: 学習内容の業務適用
6. **フォローアップ**: 定着度確認

## KPI
- 出席率: 95%以上
- 理解度: 80%以上
- 実践適用率: 70%以上
- 満足度: 4.5以上`,
          roles: ['受講者', '講師', 'L&D部門', '上司'],
          operations: {
            steps: [
              '研修準備',
              '事前学習',
              '研修実施',
              '理解度確認',
              '実践計画',
              'フォローアップ'
            ]
          },
          businessStates: {
            initial: '準備中',
            states: ['準備中', '実施中', '評価中', 'フォロー中', '完了'],
            final: '完了'
          }
        }
      ]
    },
    {
      name: 'team-formation',
      displayName: 'チームを編成する能力',
      description: 'プロジェクトの特性に応じて、相乗効果を生む最適なチーム編成を実現する能力',
      category: 'Core',
      definition: `# ビジネスケーパビリティ: チームを編成する能力

## ケーパビリティ概要
個々の能力を最大限に引き出し、チームとしての相乗効果を生む編成を実現する能力

## ビジネス価値
- **生産性向上**: チームワークによる効率化
- **品質向上**: 多様な視点による価値創造
- **イノベーション**: 創造的な問題解決

## 実現する成果
- チーム生産性: 個人の総和の120%以上
- チーム満足度: 4.2以上（5点満点）
- プロジェクト成功率: 95%以上
- 離脱率: 5%以下

## 必要な要素
### 人材・スキル
- チームビルディング専門家
- 組織心理学の知識
- ファシリテーター

### プロセス・方法論
- チーム編成理論
- パーソナリティ分析
- チームダイナミクス

### ツール・システム
- チーム分析ツール
- コラボレーションツール
- パフォーマンス測定システム`,
      businessOperations: [
        {
          name: 'team-design',
          displayName: 'チーム構成を設計する',
          pattern: 'Analytics',
          goal: '最適なチーム構成の実現',
          design: `# ビジネスオペレーション: チーム構成を設計する

## 目的
プロジェクトの要求とメンバーの特性を考慮し、最高のパフォーマンスを発揮するチーム構成を設計する

## 関係者とロール
- **プロジェクトマネージャー**: 要求定義
- **チームアーキテクト**: チーム設計
- **候補メンバー**: 参画意向確認
- **人事部門**: 人材情報提供

## ビジネスプロセス
1. **要求分析**: 必要な役割・スキル
2. **候補者選定**: 技術・人間性の評価
3. **相性分析**: メンバー間の相性
4. **役割定義**: 各自の責任範囲
5. **構成案作成**: 複数パターン検討
6. **シミュレーション**: 成果予測

## KPI
- 設計精度: 90%以上
- 役割カバー率: 100%
- 予測的中率: 85%`,
          roles: ['プロジェクトマネージャー', 'チームアーキテクト', '候補メンバー', '人事部門'],
          operations: {
            steps: [
              '要求分析',
              '候補者選定',
              '相性分析',
              '役割定義',
              '構成案作成',
              'シミュレーション'
            ]
          },
          businessStates: {
            initial: '分析中',
            states: ['分析中', '設計中', 'レビュー中', '承認済み'],
            final: '承認済み'
          }
        },
        {
          name: 'team-building',
          displayName: 'チームビルディングを実施する',
          pattern: 'Workflow',
          goal: '高パフォーマンスチームの構築',
          design: `# ビジネスオペレーション: チームビルディングを実施する

## 目的
メンバー間の信頼関係を構築し、チームとしての一体感と相乗効果を生み出す

## 関係者とロール
- **チームリーダー**: 活動主導
- **チームメンバー**: 積極的参加
- **ファシリテーター**: 活動支援
- **組織開発部門**: プログラム提供

## ビジネスプロセス
1. **キックオフ**: 目標・価値観の共有
2. **相互理解**: 強み・弱みの共有
3. **役割明確化**: 期待値のすり合わせ
4. **ルール策定**: チーム運営ルール
5. **活動実施**: ワークショップ等
6. **振り返り**: 成果と改善点

## KPI
- 参加率: 100%
- 信頼度向上: 30%以上
- チーム効力感: 4.0以上`,
          roles: ['チームリーダー', 'チームメンバー', 'ファシリテーター', '組織開発部門'],
          operations: {
            steps: [
              'キックオフ',
              '相互理解',
              '役割明確化',
              'ルール策定',
              '活動実施',
              '振り返り'
            ]
          },
          businessStates: {
            initial: '準備中',
            states: ['準備中', '実施中', '定着中', '成熟'],
            final: '成熟'
          }
        }
      ]
    },
    {
      name: 'performance-management',
      displayName: 'パフォーマンスを管理する能力',
      description: '個人とチームのパフォーマンスを継続的に向上させ、組織の成果を最大化する能力',
      category: 'Supporting',
      definition: `# ビジネスケーパビリティ: パフォーマンスを管理する能力

## ケーパビリティ概要
明確な目標設定と継続的なフィードバックにより、個人とチームのパフォーマンスを最大化する能力

## ビジネス価値
- **成果向上**: 目標達成率の向上
- **モチベーション**: 適切な評価と認知
- **成長促進**: 継続的な改善

## 実現する成果
- 目標達成率: 90%以上
- パフォーマンス向上率: 年15%
- エンゲージメント: 4.0以上
- 評価納得度: 85%以上

## 必要な要素
### 人材・スキル
- パフォーマンスコーチ
- 目標設定ファシリテーター
- データアナリスト

### プロセス・方法論
- 目標管理（OKR/MBO）
- 継続的パフォーマンス管理
- コーチング手法

### ツール・システム
- パフォーマンス管理システム
- 360度フィードバックツール
- ダッシュボード`,
      businessOperations: [
        {
          name: 'goal-setting',
          displayName: '目標を設定する',
          pattern: 'Workflow',
          goal: '明確で達成可能な目標の設定',
          design: `# ビジネスオペレーション: 目標を設定する

## 目的
組織目標と個人の成長を両立する、明確で測定可能な目標を設定する

## 関係者とロール
- **本人**: 個人目標の提案
- **上司**: 目標設定支援、承認
- **人事部門**: プロセス管理
- **経営層**: 組織目標の提示

## ビジネスプロセス
1. **組織目標展開**: トップダウン展開
2. **個人目標案作成**: ボトムアップ提案
3. **すり合わせ**: 上司との対話
4. **SMART化**: 具体的・測定可能に
5. **承認**: 最終合意
6. **システム登録**: 進捗管理開始

## KPI
- 目標設定率: 100%
- SMART適合率: 95%
- 期限内設定率: 100%`,
          roles: ['本人', '上司', '人事部門', '経営層'],
          operations: {
            steps: [
              '組織目標展開',
              '個人目標案作成',
              'すり合わせ',
              'SMART化',
              '承認',
              'システム登録'
            ]
          },
          businessStates: {
            initial: 'ドラフト',
            states: ['ドラフト', '調整中', '承認待ち', '確定'],
            final: '確定'
          }
        },
        {
          name: 'performance-review',
          displayName: 'パフォーマンスを評価する',
          pattern: 'Analytics',
          goal: '公正で建設的な評価の実施',
          design: `# ビジネスオペレーション: パフォーマンスを評価する

## 目的
達成状況を客観的に評価し、強みと改善点を明確化して次の成長につなげる

## 関係者とロール
- **被評価者**: 自己評価、振り返り
- **評価者（上司）**: 評価実施、フィードバック
- **調整委員会**: 評価の公平性確保
- **人事部門**: プロセス運営

## ビジネスプロセス
1. **実績収集**: 定量・定性データ
2. **自己評価**: 本人の振り返り
3. **一次評価**: 上司による評価
4. **多面評価**: 360度フィードバック
5. **調整会議**: 相対評価の調整
6. **フィードバック面談**: 結果共有と対話

## KPI
- 評価実施率: 100%
- フィードバック実施率: 100%
- 評価納得度: 85%以上`,
          roles: ['被評価者', '評価者（上司）', '調整委員会', '人事部門'],
          operations: {
            steps: [
              '実績収集',
              '自己評価',
              '一次評価',
              '多面評価',
              '調整会議',
              'フィードバック面談'
            ]
          },
          businessStates: {
            initial: '準備中',
            states: ['準備中', '評価中', '調整中', 'フィードバック中', '完了'],
            final: '完了'
          }
        },
        {
          name: 'continuous-improvement',
          displayName: '継続的に改善する',
          pattern: 'Workflow',
          goal: 'パフォーマンスの継続的向上',
          design: `# ビジネスオペレーション: 継続的に改善する

## 目的
定期的な振り返りとフィードバックを通じて、継続的なパフォーマンス向上を実現する

## 関係者とロール
- **本人**: 改善活動の主体
- **コーチ（上司）**: 支援・助言
- **メンター**: キャリア助言
- **同僚**: ピアサポート

## ビジネスプロセス
1. **定期チェックイン**: 週次/月次面談
2. **進捗確認**: 目標達成状況
3. **課題特定**: ボトルネック分析
4. **改善策検討**: 解決方法の探索
5. **実行支援**: リソース提供
6. **成果確認**: 改善効果測定

## KPI
- チェックイン実施率: 90%以上
- 改善提案数: 月3件以上
- 改善実行率: 80%以上`,
          roles: ['本人', 'コーチ（上司）', 'メンター', '同僚'],
          operations: {
            steps: [
              '定期チェックイン',
              '進捗確認',
              '課題特定',
              '改善策検討',
              '実行支援',
              '成果確認'
            ]
          },
          businessStates: {
            initial: 'チェックイン',
            states: ['チェックイン', '分析中', '改善中', '効果測定中'],
            final: '効果測定中'
          }
        }
      ]
    }
  ]
}

export async function createTalentOptimizationData(serviceId: string) {
  console.log('  Creating Talent Optimization Service capabilities and operations...')
  
  let totalCapabilities = 0
  let totalOperations = 0
  
  for (const capData of talentOptimizationData.capabilities) {
    // ケーパビリティの作成
    const capability = await parasolDb.businessCapability.create({
      data: {
        serviceId,
        name: capData.name,
        displayName: capData.displayName,
        description: capData.description,
        definition: capData.definition,
        category: capData.category
      }
    })
    totalCapabilities++
    console.log(`    ✓ Created capability: ${capability.displayName}`)
    
    // ビジネスオペレーションの作成
    for (const opData of capData.businessOperations) {
      const operation = await parasolDb.businessOperation.create({
        data: {
          serviceId,
          capabilityId: capability.id,
          name: opData.name,
          displayName: opData.displayName,
          design: opData.design,
          pattern: opData.pattern,
          goal: opData.goal,
          roles: JSON.stringify(opData.roles),
          operations: JSON.stringify(opData.operations),
          businessStates: JSON.stringify(opData.businessStates),
          useCases: JSON.stringify([]),
          uiDefinitions: JSON.stringify({ pages: [] }),
          testCases: JSON.stringify({ criteria: opData.goal })
        }
      })
      totalOperations++
      console.log(`      ✓ Created operation: ${operation.displayName}`)
    }
  }
  
  return { capabilities: totalCapabilities, operations: totalOperations }
}