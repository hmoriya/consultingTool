const { chromium } = require('playwright');
const path = require('path');
const fs = require('fs');

// „Ç≠„É£„Éó„ÉÅ„É£Ë®≠ÂÆö
const captures = [
  // „Ç®„Ç∞„Çº„ÇØ„ÉÜ„Ç£„Éñ
  {
    role: 'executive',
    email: 'exec@example.com',
    password: 'password123',
    captures: [
      {
        useCase: 'exec-portfolio',
        steps: [
          { nav: '/dashboard/executive', wait: 2000, filename: 'step-1.png', desc: '„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ' },
          { nav: '/projects', wait: 1500, filename: 'step-2.png', desc: '„Éó„É≠„Ç∏„Çß„ÇØ„Éà‰∏ÄË¶ß' },
          { nav: '/dashboard/executive', wait: 1500, filename: 'step-3.png', desc: 'KPIÁ¢∫Ë™ç' },
          { nav: '/team/utilization', wait: 1500, filename: 'step-4.png', desc: '„É™„ÇΩ„Éº„ÇπÊúÄÈÅ©Âåñ' },
          { nav: '/reports', wait: 1500, filename: 'step-5.png', desc: '„É¨„Éù„Éº„Éà' }
        ]
      },
      {
        useCase: 'exec-financial',
        steps: [
          { nav: '/dashboard/executive', wait: 2000, filename: 'step-1.png', desc: 'Ë≤°Âãô„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ' },
          { nav: '/dashboard/executive', wait: 1000, filename: 'step-2.png', desc: 'ÊúàÊ¨°ÂèéÁõäÁ¢∫Ë™ç' },
          { nav: '/dashboard/executive', wait: 1000, filename: 'step-3.png', desc: 'ÂâçÊúàÊØîÂàÜÊûê' },
          { nav: '/dashboard/executive', wait: 1000, filename: 'step-4.png', desc: '‰∫àÂÆüÂ∑ÆÁï∞' },
          { nav: '/dashboard/executive', wait: 1000, filename: 'step-5.png', desc: '„Ç¢„ÇØ„Ç∑„Éß„É≥„Éó„É©„É≥' }
        ]
      }
    ]
  },
  // PM
  {
    role: 'pm',
    email: 'pm@example.com',
    password: 'password123',
    captures: [
      {
        useCase: 'pm-project-mgmt',
        steps: [
          { nav: '/dashboard/pm', wait: 2000, filename: 'step-1.png', desc: 'PM„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ' },
          { nav: '/projects', wait: 1500, filename: 'step-2.png', desc: '„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÈÄ≤Êçó' },
          { nav: '/tasks', wait: 1500, filename: 'step-3.png', desc: '„Çø„Çπ„ÇØÁÆ°ÁêÜ' },
          { nav: '/projects', wait: 1500, filename: 'step-4.png', desc: '„É™„Çπ„ÇØÁÆ°ÁêÜ' },
          { nav: '/team/utilization', wait: 1500, filename: 'step-5.png', desc: '„ÉÅ„Éº„É†Á®ºÂÉçÁä∂Ê≥Å' }
        ]
      },
      {
        useCase: 'pm-timesheet-approval',
        steps: [
          { nav: '/timesheet/approval', wait: 2000, filename: 'step-1.png', desc: 'ÊâøË™çÁîªÈù¢' },
          { nav: '/timesheet/approval', wait: 1000, filename: 'step-2.png', desc: 'Êú™ÊâøË™ç‰∏ÄË¶ß' },
          { nav: '/timesheet/approval', wait: 1000, filename: 'step-3.png', desc: 'Â∑•Êï∞Á¢∫Ë™ç' },
          { nav: '/timesheet/approval', wait: 1000, filename: 'step-4.png', desc: 'ÊâøË™çÂá¶ÁêÜ' },
          { nav: '/timesheet/approval', wait: 1000, filename: 'step-5.png', desc: 'ÊúàÊ¨°Á∑†„ÇÅ' }
        ]
      }
    ]
  },
  // „Ç≥„É≥„Çµ„É´„Çø„É≥„Éà
  {
    role: 'consultant',
    email: 'consultant@example.com',
    password: 'password123',
    captures: [
      {
        useCase: 'consultant-task',
        steps: [
          { nav: '/dashboard/consultant', wait: 2000, filename: 'step-1.png', desc: '„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ' },
          { nav: '/tasks', wait: 1500, filename: 'step-2.png', desc: '„Çø„Çπ„ÇØ‰∏ÄË¶ß' },
          { nav: '/tasks', wait: 1000, filename: 'step-3.png', desc: '„Çπ„ÉÜ„Éº„Çø„ÇπÊõ¥Êñ∞' },
          { nav: '/timesheet', wait: 1500, filename: 'step-4.png', desc: '‰ΩúÊ•≠ÊôÇÈñìË®òÈå≤' },
          { nav: '/deliverables', wait: 1500, filename: 'step-5.png', desc: 'ÊàêÊûúÁâ©„Ç¢„ÉÉ„Éó' }
        ]
      },
      {
        useCase: 'consultant-timesheet',
        steps: [
          { nav: '/timesheet', wait: 2000, filename: 'step-1.png', desc: '„Çø„Ç§„É†„Ç∑„Éº„Éà' },
          { nav: '/timesheet', wait: 1000, filename: 'step-2.png', desc: '„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÈÅ∏Êäû' },
          { nav: '/timesheet', wait: 1000, filename: 'step-3.png', desc: 'ÊôÇÈñìÂÖ•Âäõ' },
          { nav: '/timesheet', wait: 1000, filename: 'step-4.png', desc: '‰ΩúÊ•≠ÂÜÖÂÆπË®òËºâ' },
          { nav: '/timesheet', wait: 1000, filename: 'step-5.png', desc: 'ÊâøË™çÁî≥Ë´ã' }
        ]
      },
      {
        useCase: 'consultant-skill',
        steps: [
          { nav: '/team/skills', wait: 2000, filename: 'step-1.png', desc: '„Çπ„Ç≠„É´ÁÆ°ÁêÜ' },
          { nav: '/team/skills', wait: 1000, filename: 'step-2.png', desc: '„Çπ„Ç≠„É´Ê§úÁ¥¢' },
          { nav: '/team/skills', wait: 1000, filename: 'step-3.png', desc: '„É¨„Éô„É´Ë©ï‰æ°' },
          { nav: '/team/skills', wait: 1000, filename: 'step-4.png', desc: 'Ë≥áÊ†ºÁôªÈå≤' },
          { nav: '/team/skills', wait: 1000, filename: 'step-5.png', desc: '„Éó„É≠„Éï„Ç°„Ç§„É´Êõ¥Êñ∞' }
        ]
      }
    ]
  },
  // „ÇØ„É©„Ç§„Ç¢„É≥„Éà
  {
    role: 'client',
    email: 'client@example.com',
    password: 'password123',
    captures: [
      {
        useCase: 'client-progress',
        steps: [
          { nav: '/dashboard/client', wait: 2000, filename: 'step-1.png', desc: '„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ' },
          { nav: '/dashboard/client', wait: 1000, filename: 'step-2.png', desc: '„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÊ¶ÇË¶Å' },
          { nav: '/dashboard/client', wait: 1000, filename: 'step-3.png', desc: 'ÈÄ≤ÊçóÁéáÁ¢∫Ë™ç' },
          { nav: '/deliverables', wait: 1500, filename: 'step-4.png', desc: 'ÊàêÊûúÁâ©„É¨„Éì„É•„Éº' },
          { nav: '/messages', wait: 1500, filename: 'step-5.png', desc: '„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ' }
        ]
      },
      {
        useCase: 'client-document',
        steps: [
          { nav: '/deliverables', wait: 2000, filename: 'step-1.png', desc: 'ÊàêÊûúÁâ©‰∏ÄË¶ß' },
          { nav: '/deliverables', wait: 1000, filename: 'step-2.png', desc: 'ÊàêÊûúÁâ©Á¢∫Ë™ç' },
          { nav: '/deliverables', wait: 1000, filename: 'step-3.png', desc: '„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ' },
          { nav: '/deliverables', wait: 1000, filename: 'step-4.png', desc: '„Ç≥„É°„É≥„ÉàË®òËºâ' },
          { nav: '/deliverables', wait: 1000, filename: 'step-5.png', desc: 'ÊâøË™ç/‰øÆÊ≠£‰æùÈ†º' }
        ]
      }
    ]
  }
];

// ÂÖ±ÈÄöÊ©üËÉΩ„ÅÆ„Ç≠„É£„Éó„ÉÅ„É£
const commonCaptures = [
  {
    useCase: 'common-message',
    steps: [
      { nav: '/messages', wait: 2000, filename: 'step-1.png', desc: '„É°„ÉÉ„Çª„Éº„Ç∏ÁîªÈù¢' },
      { nav: '/messages', wait: 1000, filename: 'step-2.png', desc: '„ÉÅ„É£„É≥„Éç„É´ÈÅ∏Êäû' },
      { nav: '/messages', wait: 1000, filename: 'step-3.png', desc: '„É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°' },
      { nav: '/messages', wait: 1000, filename: 'step-4.png', desc: 'ÈÄöÁü•Á¢∫Ë™ç' },
      { nav: '/messages', wait: 1000, filename: 'step-5.png', desc: '„Éï„Ç°„Ç§„É´ÂÖ±Êúâ' }
    ]
  },
  {
    useCase: 'common-notification',
    steps: [
      { nav: '/', wait: 2000, filename: 'step-1.png', desc: 'ÈÄöÁü•„Ç¢„Ç§„Ç≥„É≥' },
      { nav: '/', wait: 1000, filename: 'step-2.png', desc: 'ÈÄöÁü•‰∏ÄË¶ß' },
      { nav: '/', wait: 1000, filename: 'step-3.png', desc: 'Ë©≥Á¥∞Á¢∫Ë™ç' },
      { nav: '/', wait: 1000, filename: 'step-4.png', desc: '„Ç¢„ÇØ„Ç∑„Éß„É≥ÂÆüË°å' },
      { nav: '/', wait: 1000, filename: 'step-5.png', desc: 'Êó¢Ë™≠Âá¶ÁêÜ' }
    ]
  }
];

async function ensureDirectory(dir) {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }
}

async function captureScreenshots() {
  const browser = await chromium.launch({ 
    headless: false,
    slowMo: 500 // Êìç‰Ωú„ÇíË¶ã„ÇÑ„Åô„Åè„Åô„Çã„Åü„ÇÅ
  });

  try {
    // ÂêÑ„É≠„Éº„É´„Åß„Ç≠„É£„Éó„ÉÅ„É£
    for (const roleData of captures) {
      console.log(`\nüì∏ Capturing ${roleData.role.toUpperCase()} role...`);
      
      const context = await browser.newContext({
        viewport: { width: 1280, height: 800 },
        deviceScaleFactor: 1.5,
      });
      const page = await context.newPage();

      // „É≠„Ç∞„Ç§„É≥
      await page.goto('http://localhost:3000/login');
      await page.waitForLoadState('networkidle');
      await page.fill('input[type="email"]', roleData.email);
      await page.fill('input[type="password"]', roleData.password);
      await page.click('button[type="submit"]');
      await page.waitForURL('**/dashboard/**', { timeout: 5000 }).catch(() => {});
      
      // ÂêÑ„É¶„Éº„Çπ„Ç±„Éº„Çπ„ÅÆ„Ç≠„É£„Éó„ÉÅ„É£
      for (const useCase of roleData.captures) {
        const dir = path.join('public/captures', roleData.role, useCase.useCase);
        await ensureDirectory(dir);
        
        console.log(`  üìÅ ${useCase.useCase}`);
        
        for (const step of useCase.steps) {
          await page.goto(`http://localhost:3000${step.nav}`);
          await page.waitForTimeout(step.wait);
          
          const filepath = path.join(dir, step.filename);
          await page.screenshot({ 
            path: filepath,
            fullPage: false 
          });
          console.log(`    ‚úÖ ${step.desc} -> ${step.filename}`);
        }
      }
      
      // ÂÖ±ÈÄöÊ©üËÉΩ„ÅÆ„Ç≠„É£„Éó„ÉÅ„É£ÔºàÊúÄÂàù„ÅÆ„É≠„Éº„É´„Åß„ÅÆ„ÅøÔºâ
      if (roleData.role === 'executive') {
        for (const common of commonCaptures) {
          const dir = path.join('public/captures/common', common.useCase);
          await ensureDirectory(dir);
          
          console.log(`  üìÅ ${common.useCase}`);
          
          for (const step of common.steps) {
            await page.goto(`http://localhost:3000${step.nav}`);
            await page.waitForTimeout(step.wait);
            
            const filepath = path.join(dir, step.filename);
            await page.screenshot({ 
              path: filepath,
              fullPage: false 
            });
            console.log(`    ‚úÖ ${step.desc} -> ${step.filename}`);
          }
        }
      }
      
      await context.close();
    }
    
    console.log('\n‚ú® All captures completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await browser.close();
  }
}

// ÂÆüË°å
captureScreenshots();