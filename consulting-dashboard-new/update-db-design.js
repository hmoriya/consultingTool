[38;2;141;161;185m───────┬────────────────────────────────────────────────────────────────────────[0m
       [38;2;141;161;185m│ [0m[1mSTDIN[0m
[38;2;141;161;185m───────┼────────────────────────────────────────────────────────────────────────[0m
[38;2;141;161;185m   1[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst fs = require('fs');[0m
[38;2;141;161;185m   2[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst http = require('http');[0m
[38;2;141;161;185m   3[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m   4[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m// database-design.mdの内容を読み込み[0m
[38;2;141;161;185m   5[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst content = fs.readFileSync('docs/parasol/services/secure-access-service/database-design.md', 'utf-8');[0m
[38;2;141;161;185m   6[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m   7[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m// サービスIDを取得（データベースから確認が必要だが、仮定）[0m
[38;2;141;161;185m   8[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst serviceSlug = 'secure-access-service';[0m
[38;2;141;161;185m   9[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  10[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst data = JSON.stringify({[0m
[38;2;141;161;185m  11[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  content: content[0m
[38;2;141;161;185m  12[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m});[0m
[38;2;141;161;185m  13[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  14[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst options = {[0m
[38;2;141;161;185m  15[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  hostname: 'localhost',[0m
[38;2;141;161;185m  16[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  port: 3000,[0m
[38;2;141;161;185m  17[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  path: `/api/parasol/services/${serviceSlug}/database-design`,[0m
[38;2;141;161;185m  18[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  method: 'PUT',[0m
[38;2;141;161;185m  19[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  headers: {[0m
[38;2;141;161;185m  20[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    'Content-Type': 'application/json',[0m
[38;2;141;161;185m  21[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    'Content-Length': Buffer.byteLength(data)[0m
[38;2;141;161;185m  22[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  }[0m
[38;2;141;161;185m  23[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m};[0m
[38;2;141;161;185m  24[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  25[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconsole.log('Updating database design via API...');[0m
[38;2;141;161;185m  26[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconsole.log('Path:', options.path);[0m
[38;2;141;161;185m  27[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconsole.log('Content length:', Buffer.byteLength(data), 'bytes');[0m
[38;2;141;161;185m  28[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  29[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst req = http.request(options, (res) => {[0m
[38;2;141;161;185m  30[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  let responseData = '';[0m
[38;2;141;161;185m  31[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  [0m
[38;2;141;161;185m  32[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  console.log('Status:', res.statusCode);[0m
[38;2;141;161;185m  33[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  [0m
[38;2;141;161;185m  34[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  res.on('data', (chunk) => {[0m
[38;2;141;161;185m  35[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    responseData += chunk;[0m
[38;2;141;161;185m  36[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  });[0m
[38;2;141;161;185m  37[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  [0m
[38;2;141;161;185m  38[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  res.on('end', () => {[0m
[38;2;141;161;185m  39[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    console.log('Response:', responseData);[0m
[38;2;141;161;185m  40[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    if (res.statusCode === 200) {[0m
[38;2;141;161;185m  41[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      console.log('\n✅ Database design updated successfully!');[0m
[38;2;141;161;185m  42[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    } else {[0m
[38;2;141;161;185m  43[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      console.log('\n❌ Update failed');[0m
[38;2;141;161;185m  44[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    }[0m
[38;2;141;161;185m  45[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  });[0m
[38;2;141;161;185m  46[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m});[0m
[38;2;141;161;185m  47[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  48[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mreq.on('error', (e) => {[0m
[38;2;141;161;185m  49[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  console.error('❌ Error:', e.message);[0m
[38;2;141;161;185m  50[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m});[0m
[38;2;141;161;185m  51[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  52[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mreq.write(data);[0m
[38;2;141;161;185m  53[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mreq.end();[0m
[38;2;141;161;185m───────┴────────────────────────────────────────────────────────────────────────[0m
