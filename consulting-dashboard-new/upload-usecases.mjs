[38;2;141;161;185m───────┬────────────────────────────────────────────────────────────────────────[0m
       [38;2;141;161;185m│ [0m[1mSTDIN[0m
[38;2;141;161;185m───────┼────────────────────────────────────────────────────────────────────────[0m
[38;2;141;161;185m   1[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mimport fs from 'fs';[0m
[38;2;141;161;185m   2[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mimport http from 'http';[0m
[38;2;141;161;185m   3[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m   4[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconst usecases = [[0m
[38;2;141;161;185m   5[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  {[0m
[38;2;141;161;185m   6[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    path: 'docs/parasol/services/secure-access-service/capabilities/authenticate-and-manage-users/operations/register-and-authenticate-users/usecases/login-and-authenticate.md',[0m
[38;2;141;161;185m   7[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    name: 'login-and-authenticate'[0m
[38;2;141;161;185m   8[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  },[0m
[38;2;141;161;185m   9[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  {[0m
[38;2;141;161;185m  10[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    path: 'docs/parasol/services/secure-access-service/capabilities/authenticate-and-manage-users/operations/register-and-authenticate-users/usecases/request-user-account.md',[0m
[38;2;141;161;185m  11[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    name: 'request-user-account'[0m
[38;2;141;161;185m  12[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  },[0m
[38;2;141;161;185m  13[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  {[0m
[38;2;141;161;185m  14[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    path: 'docs/parasol/services/secure-access-service/capabilities/authenticate-and-manage-users/operations/register-and-authenticate-users/usecases/approve-and-create-account.md',[0m
[38;2;141;161;185m  15[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    name: 'approve-and-create-account'[0m
[38;2;141;161;185m  16[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  },[0m
[38;2;141;161;185m  17[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  {[0m
[38;2;141;161;185m  18[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    path: 'docs/parasol/services/secure-access-service/capabilities/authenticate-and-manage-users/operations/register-and-authenticate-users/usecases/logout.md',[0m
[38;2;141;161;185m  19[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    name: 'logout'[0m
[38;2;141;161;185m  20[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  }[0m
[38;2;141;161;185m  21[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m];[0m
[38;2;141;161;185m  22[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  23[0m   [38;2;141;161;185m│[0m [38;2;227;234;242masync function uploadUsecase(usecase) {[0m
[38;2;141;161;185m  24[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  return new Promise((resolve, reject) => {[0m
[38;2;141;161;185m  25[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    const content = fs.readFileSync(usecase.path, 'utf-8');[0m
[38;2;141;161;185m  26[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    const data = JSON.stringify({ content });[0m
[38;2;141;161;185m  27[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  28[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    const options = {[0m
[38;2;141;161;185m  29[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      hostname: 'localhost',[0m
[38;2;141;161;185m  30[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      port: 3000,[0m
[38;2;141;161;185m  31[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      path: '/api/parasol/usecases',[0m
[38;2;141;161;185m  32[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      method: 'POST',[0m
[38;2;141;161;185m  33[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      headers: {[0m
[38;2;141;161;185m  34[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m        'Content-Type': 'application/json',[0m
[38;2;141;161;185m  35[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m        'Content-Length': Buffer.byteLength(data)[0m
[38;2;141;161;185m  36[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      }[0m
[38;2;141;161;185m  37[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    };[0m
[38;2;141;161;185m  38[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  39[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    const req = http.request(options, (res) => {[0m
[38;2;141;161;185m  40[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      let responseData = '';[0m
[38;2;141;161;185m  41[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      res.on('data', (chunk) => { responseData += chunk; });[0m
[38;2;141;161;185m  42[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      res.on('end', () => {[0m
[38;2;141;161;185m  43[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m        if (res.statusCode === 200 || res.statusCode === 201) {[0m
[38;2;141;161;185m  44[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m          console.log(`✅ ${usecase.name}: ${res.statusCode}`);[0m
[38;2;141;161;185m  45[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m          resolve();[0m
[38;2;141;161;185m  46[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m        } else {[0m
[38;2;141;161;185m  47[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m          console.error(`❌ ${usecase.name}: ${res.statusCode} - ${responseData}`);[0m
[38;2;141;161;185m  48[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m          reject(new Error(`Failed: ${res.statusCode}`));[0m
[38;2;141;161;185m  49[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m        }[0m
[38;2;141;161;185m  50[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      });[0m
[38;2;141;161;185m  51[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    });[0m
[38;2;141;161;185m  52[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  53[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    req.on('error', (e) => {[0m
[38;2;141;161;185m  54[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      console.error(`❌ ${usecase.name} error:`, e.message);[0m
[38;2;141;161;185m  55[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m      reject(e);[0m
[38;2;141;161;185m  56[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    });[0m
[38;2;141;161;185m  57[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  58[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    req.write(data);[0m
[38;2;141;161;185m  59[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    req.end();[0m
[38;2;141;161;185m  60[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  });[0m
[38;2;141;161;185m  61[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m}[0m
[38;2;141;161;185m  62[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  63[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconsole.log('Starting usecase upload...\n');[0m
[38;2;141;161;185m  64[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  65[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mfor (const usecase of usecases) {[0m
[38;2;141;161;185m  66[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  try {[0m
[38;2;141;161;185m  67[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    await uploadUsecase(usecase);[0m
[38;2;141;161;185m  68[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  } catch (error) {[0m
[38;2;141;161;185m  69[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m    console.error(`Failed to upload ${usecase.name}`);[0m
[38;2;141;161;185m  70[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m  }[0m
[38;2;141;161;185m  71[0m   [38;2;141;161;185m│[0m [38;2;227;234;242m}[0m
[38;2;141;161;185m  72[0m   [38;2;141;161;185m│[0m 
[38;2;141;161;185m  73[0m   [38;2;141;161;185m│[0m [38;2;227;234;242mconsole.log('\nUpload complete!');[0m
[38;2;141;161;185m───────┴────────────────────────────────────────────────────────────────────────[0m
